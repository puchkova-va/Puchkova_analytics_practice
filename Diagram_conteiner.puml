@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Определение системы
System_Boundary(s1, "Система управления заказами") {
  
  ' Контейнеры (микросервисы)
  Container(webApp, "Веб-приложение", "React.js", "Веб-приложение для взаимодействия с пользователем")
  Container(userService, "Сервис пользователей", "Java/Spring Boot", "Управляет профилями пользователей и авторизацией")
  Container(catalogService, "Сервис товарного каталога", "Java/Spring Boot", "Управляет товарами, ценами и характеристиками")
  Container(orderService, "Сервис заказов", "Java/Spring Boot", "Обрабатывает создание, изменение и отслеживание заказов")
  Container(deliveryService, "Сервис доставки", "Java/Spring Boot", "Организует доставку товаров")
  Container(warehouseService, "Сервис управления складами", "Java/Spring Boot", "Управляет складами и товарными запасами")
  Container(financeService, "Финансовый сервис", "Java/Spring Boot", "Обрабатывает платежи и генерирует финансовые отчеты")
  
  ' База данных
  ContainerDb(db, "База данных", "PostgreSQL", "Хранит данные о пользователях, товарах, заказах и платежах")

}

' Связи между контейнерами
Rel(webApp, userService, "Использует", "HTTP/REST API")
Rel(webApp, catalogService, "Использует", "HTTP/REST API")
Rel(webApp, orderService, "Использует", "HTTP/REST API")
Rel(orderService, userService, "Отправляет запросы на создание и обновление данных пользователей", "HTTP/REST API")
Rel(orderService, catalogService, "Получает данные о товарах", "HTTP/REST API")
Rel(orderService, deliveryService, "Отправляет запросы на доставку товаров", "HTTP/REST API")
Rel(orderService, financeService, "Отправляет информацию для обработки платежей", "HTTP/REST API")
Rel(deliveryService, warehouseService, "Использует для координации логистики и запасов", "HTTP/REST API")
Rel(userService, db, "Читает и записывает данные пользователей", "JDBC")
Rel(catalogService, db, "Читает и записывает данные о товарах", "JDBC")
Rel(orderService, db, "Читает и записывает данные о заказах", "JDBC")
Rel(financeService, db, "Читает и записывает данные о платежах", "JDBC")
Rel(warehouseService, db, "Читает и записывает данные о складах и товарах", "JDBC")

@enduml
